import os
import time


# Positions of snake
snake = [
    [2, 5],
    [3, 5],
    [4, 5],
    [5, 5],
    [6, 5],
    [7, 5],
]

# Change in position per refresh
velocity = [1, 0]

# 2D array of screen pixels
screen = [
    ["⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿",],
    ["⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿",],
    ["⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿",],
    ["⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿",],
    ["⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿",],
    ["⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿",],
    ["⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿",],
    ["⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿",],
    ["⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿",],
    ["⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿",],
    ["⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿",],
    ["⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿",],
    ["⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿",],
    ["⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿",],
    ["⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿",],
    ["⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿",],
    ["⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿",],
    ["⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿",],
    ["⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿",],
    ["⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿",],
    ["⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿",],
    ["⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿",],
    ["⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿",],
    ["⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿", "⣿",],
]

# Height and Width of screen
height = len(screen)
width = len(screen[0])


# Function to change position values of snake
def moveSnake():
    new_x = snake[-1][0] + velocity[0]
    new_y = snake[-1][1] + velocity[1]

    snake.append([new_x, new_y])
    snake.pop(0)


# Read position values and change the pixels accordingly
def drawSnake():
    for y in range(height):
        for x in range(width):
            if [x, y] in snake:
                screen[y][x] = "X"
            else:
                screen[y][x] = "⣿"


# Print the screen using the 2D screen array
def printScreen():
    for charList in screen:
        line = ""
        for char in charList:
            line += char
        print(line)


# Runs for each frame
while True:
    os.system("clear")
    printScreen()
    moveSnake()
    drawSnake()
    time.sleep(0.5)
